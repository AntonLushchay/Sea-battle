{
	// Наследует все настройки из базового конфигурационного файла.
	"extends": "../../tsconfig.base.json",

	// Указывает, что в данный проект входят только файлы из директории "src".
	"include": ["src"],

	// Устанавливает связь с проектом 'shared' для корректной сборки в монорепозитории.
	"references": [{ "path": "../shared" }],

	"compilerOptions": {
		// Переопределяет "lib" из базового конфига. Убирает "DOM", оставляя только стандартные возможности языка.
		// Это гарантирует, что в серверном коде не будут использоваться браузерные API.
		"lib": ["ES2022"],

		// Указывает TypeScript использовать систему модулей, соответствующую современным версиям Node.js (поддерживает и require, и import).
		"module": "NodeNext",

		// Указывает использовать современный алгоритм разрешения модулей, как в Node.js.
		"moduleResolution": "NodeNext",

		// Явно указывает TypeScript загрузить определения типов для встроенных модулей Node.js (path, fs, http и т.д.).
		"types": ["node", "ws"],

		// Обязательная опция для проектов, на которые ссылаются через "references". Ускоряет пересборку в монорепозитории.
		"composite": true,

		// Разрешает компилятору создавать JavaScript файлы. Для сервера это нужно, в отличие от клиента, где работал Vite.
		"noEmit": false,

		// Указывает, что скомпилированные JavaScript файлы нужно складывать в папку "dist".
		"outDir": "dist",

		// Запрещает импорты с расширением .ts. В скомпилированном JS-коде для Node.js они бы привели к ошибке.
		"allowImportingTsExtensions": false
	}
}
